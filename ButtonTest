import pygame
import MazeAI

pygame.init()
screen = pygame.display.set_mode((700, 500))
screen.fill((255,255,255))
 
def button(screen, position, text): # constructor
    font = pygame.font.SysFont("Arial", 50)
    text_render = font.render(text, 1, (255, 0, 0)) # where the text goes
    x, y, w , h = text_render.get_rect() # gets the size of the button
    x, y = position
    xpadding = 10
    ypadding = 5
    pygame.draw.line(screen, "black", (x - xpadding, y - ypadding), (x + w + xpadding, y - ypadding), 5) #draws the top border
    pygame.draw.line(screen, "black", (x - xpadding, y - 2 - ypadding), (x - xpadding, y + h + ypadding), 5) #draws the left border
    pygame.draw.line(screen, "black", (x - xpadding, y + h + ypadding - 2), (x + w + xpadding , y + h + ypadding - 2), 5) #draws the bottom boder
    pygame.draw.line(screen, (50, 50, 50), (x + w + xpadding - 2, y + h + ypadding), [x + w + xpadding - 2, y - ypadding], 5) #draws the right border
    pygame.draw.rect(screen, "white", (x, y, w , h)) #draw the button body
    return screen.blit(text_render, (x, y)) 

def start(): #event for start button
    MazeAI.Maze_generation()
 
def menu(): # main loop
    # This is the menu that waits you to click the s key to start 
    b1 = button(screen, (610, 425), "Quit") #create the quit button
    b2 = button(screen, (495, 425), "Start") #create the start button
    b3 = button(screen, (15, 425), "Generate")#create the generate maze button
    while True:
        for event in pygame.event.get():
            if (event.type == pygame.QUIT):
                pygame.quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    pygame.quit()
                key_to_start = event.key == pygame.K_s or event.key == pygame.K_RIGHT or event.key == pygame.K_UP
                if key_to_start:
                    start()
            if event.type == pygame.MOUSEBUTTONDOWN:
                if b1.collidepoint(pygame.mouse.get_pos()):
                    pygame.quit()
                elif b2.collidepoint(pygame.mouse.get_pos()):
                    start()
                elif b3.collidepoint(pygame.mouse.get_pos()):
                    start()
        pygame.display.update()
    pygame.quit()
 
menu()